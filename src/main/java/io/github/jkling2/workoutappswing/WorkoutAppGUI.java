/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package io.github.jkling2.workoutappswing;

/**
 *
 * @author jkling
 */
public class WorkoutAppGUI extends javax.swing.JFrame {

    /**
     * Creates new form WorkoutAppGUI
     */
    public WorkoutAppGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        ConfigurationPanel = new javax.swing.JPanel();
        breakUnitLabel = new javax.swing.JLabel();
        intervalUnitLabel = new javax.swing.JLabel();
        roundsUnitLabel = new javax.swing.JLabel();
        roundsLabel = new javax.swing.JLabel();
        intervalTimeLabel = new javax.swing.JLabel();
        roundsSlider = new javax.swing.JSlider();
        breakTimeSlider = new javax.swing.JSlider();
        intervalTimeSlider = new javax.swing.JSlider();
        breakTimeLabel = new javax.swing.JLabel();
        TimerPanel = new javax.swing.JPanel();
        breakButton = new javax.swing.JButton();
        workoutStateLabel = new javax.swing.JLabel();
        breakProgressBar = new javax.swing.JProgressBar();
        stopButton = new javax.swing.JButton();
        intervalProgressBar = new javax.swing.JProgressBar();
        separateConfigTimer = new javax.swing.JSeparator();
        startButton = new javax.swing.JButton();
        SubmitButton = new javax.swing.JButton();
        ConfigureButton = new javax.swing.JButton();

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Workout App");

        breakUnitLabel.setText("0 sec");

        intervalUnitLabel.setText("0 sec");

        roundsUnitLabel.setText("0 Rounds");

        roundsLabel.setText("Rounds");

        intervalTimeLabel.setText("Interval Time");

        roundsSlider.setMaximum(50);
        roundsSlider.setPaintLabels(true);
        roundsSlider.setValue(0);
        roundsSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                roundsSliderStateChanged(evt);
            }
        });

        breakTimeSlider.setMaximum(120);
        breakTimeSlider.setPaintLabels(true);
        breakTimeSlider.setValue(0);
        breakTimeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                breakTimeSliderStateChanged(evt);
            }
        });

        intervalTimeSlider.setMaximum(120);
        intervalTimeSlider.setPaintLabels(true);
        intervalTimeSlider.setValue(0);
        intervalTimeSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        intervalTimeSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                intervalTimeSliderStateChanged(evt);
            }
        });

        breakTimeLabel.setText("Break Time");

        javax.swing.GroupLayout ConfigurationPanelLayout = new javax.swing.GroupLayout(ConfigurationPanel);
        ConfigurationPanel.setLayout(ConfigurationPanelLayout);
        ConfigurationPanelLayout.setHorizontalGroup(
            ConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConfigurationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConfigurationPanelLayout.createSequentialGroup()
                        .addComponent(roundsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roundsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(roundsUnitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                    .addGroup(ConfigurationPanelLayout.createSequentialGroup()
                        .addComponent(intervalTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(intervalTimeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(intervalUnitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(ConfigurationPanelLayout.createSequentialGroup()
                        .addComponent(breakTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(breakTimeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(breakUnitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        ConfigurationPanelLayout.setVerticalGroup(
            ConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConfigurationPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(ConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(intervalTimeLabel)
                    .addComponent(intervalTimeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(intervalUnitLabel))
                .addGap(18, 18, 18)
                .addGroup(ConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(breakTimeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(breakTimeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(breakUnitLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(ConfigurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(roundsSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roundsUnitLabel)
                    .addComponent(roundsLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TimerPanel.setOpaque(false);

        breakButton.setText("Break");
        breakButton.setEnabled(false);
        breakButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breakButtonActionPerformed(evt);
            }
        });

        workoutStateLabel.setText(intervalUnitLabel.getText() + " PUSH - " + breakUnitLabel.getText() + " REST - " + roundsUnitLabel.getText());
        workoutStateLabel.setEnabled(false);

        breakProgressBar.setEnabled(false);
        breakProgressBar.setString(breakProgressBar.getValue() + " sec");
        breakProgressBar.setStringPainted(true);

        stopButton.setText("Stop");
        stopButton.setEnabled(false);
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        intervalProgressBar.setEnabled(false);
        intervalProgressBar.setString(intervalProgressBar.getValue() + " sec");
        intervalProgressBar.setStringPainted(true);

        startButton.setText("Start");
        startButton.setEnabled(false);
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TimerPanelLayout = new javax.swing.GroupLayout(TimerPanel);
        TimerPanel.setLayout(TimerPanelLayout);
        TimerPanelLayout.setHorizontalGroup(
            TimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TimerPanelLayout.createSequentialGroup()
                .addGroup(TimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TimerPanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(startButton)
                        .addGap(18, 18, 18)
                        .addComponent(breakButton)
                        .addGap(18, 18, 18)
                        .addComponent(stopButton))
                    .addGroup(TimerPanelLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(TimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(breakProgressBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(intervalProgressBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(separateConfigTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(TimerPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(workoutStateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TimerPanelLayout.setVerticalGroup(
            TimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TimerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(separateConfigTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(workoutStateLabel)
                .addGap(18, 18, 18)
                .addComponent(intervalProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(breakProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(TimerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton)
                    .addComponent(breakButton)
                    .addComponent(stopButton))
                .addContainerGap())
        );

        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        ConfigureButton.setText("Configure");
        ConfigureButton.setEnabled(false);
        ConfigureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfigureButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ConfigurationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TimerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 26, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(SubmitButton)
                .addGap(18, 18, 18)
                .addComponent(ConfigureButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(ConfigurationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubmitButton)
                    .addComponent(ConfigureButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TimerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        changeFocus();
        breakButton.setEnabled(false);
        stopButton.setEnabled(false);
        workoutStateLabel.setText(intervalUnitLabel.getText() + " PUSH - " + breakUnitLabel.getText() + " REST - " + roundsUnitLabel.getText());
        intervalProgressBar.setMaximum(intervalTimeSlider.getValue());
        intervalProgressBar.setValue(intervalTimeSlider.getValue());
        intervalProgressBar.setString(intervalProgressBar.getValue() + " sec");
        breakProgressBar.setMaximum(breakTimeSlider.getValue());
        breakProgressBar.setValue(breakTimeSlider.getValue());
        breakProgressBar.setString(breakProgressBar.getValue() + " sec");
        wTT = new WorkoutTimerThread(this.intervalTimeSlider.getValue(), this.breakTimeSlider.getValue(), this.roundsSlider.getValue());
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void ConfigureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfigureButtonActionPerformed
        changeFocus();
        breakButton.setEnabled(false);
        stopButton.setEnabled(false);
    }//GEN-LAST:event_ConfigureButtonActionPerformed

    private void changeFocus() {
        SubmitButton.setEnabled(!SubmitButton.isEnabled());
        ConfigureButton.setEnabled(!ConfigureButton.isEnabled());
        intervalTimeLabel.setEnabled(!intervalTimeLabel.isEnabled());
        intervalTimeSlider.setEnabled(!intervalTimeSlider.isEnabled());
        intervalUnitLabel.setEnabled(!intervalUnitLabel.isEnabled());
        breakTimeLabel.setEnabled(!breakTimeLabel.isEnabled());
        breakTimeSlider.setEnabled(!breakTimeSlider.isEnabled());
        breakUnitLabel.setEnabled(!breakUnitLabel.isEnabled());
        roundsLabel.setEnabled(!roundsLabel.isEnabled());
        roundsSlider.setEnabled(!roundsSlider.isEnabled());
        roundsUnitLabel.setEnabled(!roundsUnitLabel.isEnabled());
        workoutStateLabel.setEnabled(!workoutStateLabel.isEnabled());
        intervalProgressBar.setEnabled(!intervalProgressBar.isEnabled());
        breakProgressBar.setEnabled(!breakProgressBar.isEnabled());
        startButton.setEnabled(!startButton.isEnabled());
    }
    
    private void intervalTimeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_intervalTimeSliderStateChanged
        intervalUnitLabel.setText(intervalTimeSlider.getValue() + " sec");
    }//GEN-LAST:event_intervalTimeSliderStateChanged

    private void breakTimeSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_breakTimeSliderStateChanged
        breakUnitLabel.setText(breakTimeSlider.getValue() + " sec");
    }//GEN-LAST:event_breakTimeSliderStateChanged

    private void roundsSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_roundsSliderStateChanged
        roundsUnitLabel.setText(roundsSlider.getValue() + " Rounds");
    }//GEN-LAST:event_roundsSliderStateChanged

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        wTT.startCountdown(this.intervalProgressBar, this.breakProgressBar, this.startButton);
        wTT = new WorkoutTimerThread(this.intervalTimeSlider.getValue(), this.breakTimeSlider.getValue(), this.roundsSlider.getValue());
    }//GEN-LAST:event_startButtonActionPerformed

    private void breakButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breakButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_breakButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stopButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WorkoutAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WorkoutAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WorkoutAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WorkoutAppGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WorkoutAppGUI().setVisible(true);
            }
        });
    }
    
    private WorkoutTimerThread wTT;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ConfigurationPanel;
    private javax.swing.JButton ConfigureButton;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JPanel TimerPanel;
    private javax.swing.JButton breakButton;
    private javax.swing.JProgressBar breakProgressBar;
    private javax.swing.JLabel breakTimeLabel;
    private javax.swing.JSlider breakTimeSlider;
    private javax.swing.JLabel breakUnitLabel;
    private javax.swing.JProgressBar intervalProgressBar;
    private javax.swing.JLabel intervalTimeLabel;
    private javax.swing.JSlider intervalTimeSlider;
    private javax.swing.JLabel intervalUnitLabel;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JLabel roundsLabel;
    private javax.swing.JSlider roundsSlider;
    private javax.swing.JLabel roundsUnitLabel;
    private javax.swing.JSeparator separateConfigTimer;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JLabel workoutStateLabel;
    // End of variables declaration//GEN-END:variables
}
